server.port=9090
#컨텍스트 path
server.servlet.context-path=/streampark
#view 설정
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html

#db연동
spring.datasource.driver-class-name=org.h2.Driver
spring.datasource.url=
spring.datasource.username=sa
spring.datasource.password=

spring.thymeleaf.servlet.produce-partial-output-while-processing=false

#sql문이 있는 위치 설정(mybatis)
mybatis.mapper-locations=classpath:/mappers/*Mapper.xml

#dto위치ㅣ설정
mybatis.type-aliases-package = com.project.dto

# db로 세션관리
server.servlet.session.timeout=3600
spring.session.store-type=jdbc
spring.session.jdbc.initialize-schema=always


# ddl 
# create -> 엔티티의 정보를 읽어서 테이블 생성, 재구동시 다시 생성( DROP 이후 CREATE ?)
# update -> 엔티티의 정보를 읽어서 변경사항 발생시 생성( CREATE )
# none -> ddl 사용하지 않음
# validate -> 엔티티와 테이블이 정상 매핑되었는지 확인
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.hibernate.ddl-auto=validate
#spring.jpa.hibernate.ddl-auto=update

# Redis DB 설정
spring.redis.host=
# server host
spring.redis.password=
# server password
spring.redis.port=
spring.redis.database=

# # connection port
# spring.redis.pool.max-idle=8
# # pool settings ...
# spring.redis.pool.min-idle=0
# spring.redis.pool.max-active=8
# spring.redis.pool.max-wait=-1

# 메일보내기
# spring.mail.host=smtp.gmail.com
# spring.mail.port=587
# spring.mail.username=<내 구글 계정>
# spring.mail.password=<내 구글 계정 패스워드>
# spring.mail.properties.mail.smtp.auth=true
# spring.mail.properties.mail.smtp.starttls.enable=true

